import{V as P,S,a as E,W as D,N as b,P as C,b as g,c as L,G as W,T as x,d as G,H as R,C as v}from"./three.module-BQ-k8xsV.js";import{R as F,C as N,f as T,x as z,L as H,F as O,N as k,E as B,a as j,b as f,c as U,T as A,d as K,u as V,P as q,O as I,U as X}from"./shared-ouhogbJC.js";import{i as Z,O as J}from"./tiny-invariant-DF4oGVLN.js";let a,n,d,M,o,p,i,e,l,w;const c=new P,y=new P,Q=new Date("2000-06-01T10:00:00Z"),Y=new F(0,N(67),1e3),s=Y.toECEF(),_=T.WGS84.getSurfaceNormal(s);function $(){M=new v,o=new S;const t=window.innerWidth/window.innerHeight;n=new E(75,t,10,1e6),n.position.copy(s),n.up.copy(_);const m=document.getElementById("container");Z(m!=null),d=new J(n,m),d.enableDamping=!0,d.minDistance=1e3,d.target.copy(s),a=new D({depth:!1,logarithmicDepthBuffer:!0}),a.setPixelRatio(window.devicePixelRatio),a.setSize(window.innerWidth,window.innerHeight),a.toneMapping=b,a.toneMappingExposure=10,a.shadowMap.enabled=!0,a.shadowMap.type=C,p=new z;const h=new g(new L(2,2),p);h.frustumCulled=!1,o.add(h),i=new H,i.position.copy(s),o.add(i),e=new O({distance:300}),e.target.position.copy(s),e.castShadow=!0,e.shadow.camera.top=300,e.shadow.camera.bottom=-300,e.shadow.camera.left=-300,e.shadow.camera.right=300,e.shadow.camera.near=0,e.shadow.camera.far=600,e.shadow.mapSize.width=2048,e.shadow.mapSize.height=2048,e.shadow.normalBias=1,o.add(e),o.add(e.target);const r=new W;T.WGS84.getEastNorthUpFrame(s).decompose(r.position,r.quaternion,r.scale);const u=new g(new x(200,60,256,64),new G({color:"white",roughness:.5,ior:1.45,clearcoat:1,clearcoatRoughness:.1}));u.castShadow=!0,u.receiveShadow=!0,r.add(u),o.add(r),l=new k(n),w=new B(a,{frameBufferType:R,multisampling:8}),w.addPass(new j(o,n)),w.addPass(new f(n,l)),w.addPass(new f(n,new U,new A({mode:K.AGX}),new V)),new q().setTypeFromRenderer(a).load("/geospatial/"+"assets/atmosphere",ee),m.appendChild(a.domElement),window.addEventListener("resize",ae)}function ee(t){Object.assign(p,t),e.transmittanceTexture=t.transmittanceTexture,i.irradianceTexture=t.irradianceTexture,Object.assign(l,t),a.setAnimationLoop(ne)}function ae(){n.aspect=window.innerWidth/window.innerHeight,n.updateProjectionMatrix(),a.setSize(window.innerWidth,window.innerHeight)}function ne(){const t=+Q+M.getElapsedTime()*5e6%864e5;I(t,c),X(t,y),p.sunDirection.copy(c),p.moonDirection.copy(y),e.sunDirection.copy(c),i.sunDirection.copy(c),l.sunDirection.copy(c),e.update(),i.update(),d.update(),w.render()}window.addEventListener("load",$);
